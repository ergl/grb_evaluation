{driver,grb_bench}.

{mode,max}.
{duration,2}.
{concurrent,250}.
{report_interval,5}.

{key_generator, {uniform_int, 1000000}}.
{value_generator, {fixed_bin, 256}}.

%% Pre hooks (set up connection pools)
{pre_hook, {hook_grb, start}}.

%% Size of the connection pool, and node
%% to choose as the bootstrap node for ring info
{pre_hook_args, [[{conn_pool_size, 16},
                  %% options are shackle or pvc_connection (buffered)
                  %% the shackle option will use the new grb_client module
                  %% other options will use the old pvc module
                  {connection_transport, shackle},
                  %% if pvc_connection, cork_len is the length of the timer
                  %% to send connections (option doesn't do anything for pvc_direct_connection)
                  %% id_len sets the bith lenght of identifiers to messages.
                  %% only id_len affects shackle
                  {conection_opts, #{cork_len => 3, id_len => 16}},
                  {connection_port, 7878}]]}.

%% Can do ping | uniform_barrier | readonly_blue | writeonly_blue | read_write_blue
%%               readonly_blue_barrier | writeonly_blue_barrier | read_write_blue_barrier
%% (for post-commit uniform barrier)
{operations,[
    {writeonly_blue,1}
]}.

{readonly_ops, 1}.
{writeonly_ops, 1}.

%% Op ratio for read write
%% The first number is the readonly ops
%% The second the number of update ops
{ratio, {1, 1}}.

%% Should transactions re-use old clocks?
%% (uniform barriers will always re-use clocks)
%% if not, use ping
{reuse_cvc, false}.

%% Should we retry until commit? (only applicable to red transactions)
{retry_aborts, false}.
